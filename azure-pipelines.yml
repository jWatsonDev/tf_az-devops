# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'learn-azure (972c488c-6d02-4d46-afa7-ed43e331e682)'
    KeyVaultName: 'test-jay-kv'
    SecretsFilter: '*'
    RunAsPreJob: true

# Initialize with explicitly mapped secrets
- bash: |
    terraform init \
      -backend-config="storage_account_name=tfstate28236" \
      -backend-config="container_name=tfstate" \
      -backend-config="key=terraform.tfstate" \
      -backend-config="sas_token=$TF_STATE_BLOB_SAS_TOKEN"
  displayName: Terraform Init
  env:
    TF_STATE_BLOB_SAS_TOKEN:      $(kv-tf-state-sas-token)


# Less noise ðŸ‘Œ
# - bash: terraform plan -out deployment.tfplan
#   displayName: Terraform Plan (ignores drift)

- bash: terraform apply -auto-approve
  displayName: Terraform Apply
  env:
    ARM_SUBSCRIPTION_ID: $(kv-arm-subscription-id)
    ARM_CLIENT_ID:       $(kv-arm-client-id)
    ARM_CLIENT_SECRET:   $(kv-arm-client-secret)
    ARM_TENANT_ID:       $(kv-arm-tenant-id)